{"version":3,"sources":["components/images/logo.svg","components/images/illustration-mockups.svg","components/images/illustration-grow-together.svg","components/images/illustration-flowing-conversation.svg","components/images/illustration-your-users.svg","components/images/logo-white.svg","components/headerSection.jsx","components/mainContent.jsx","components/footerSection.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderSection","className","src","headerLogo","alt","Mockups","Component","mainContent","GrowTogether","FlowingConversation","Users","Footer","LogoWhite","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,wD,gBCA3CD,EAAOC,QAAU,IAA0B,+D,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,2NCItBC,E,uKAEb,OACI,gCACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,OAAOC,IAAMC,IAAaC,IAAI,SAC7C,4BAAQH,UAAU,OAAlB,gBAIA,yBAAKA,UAAU,QACX,6BACI,uEACA,oMAIA,4BAAQA,UAAU,mBAAlB,yBAIJ,6BACI,yBAAKA,UAAU,aAAaC,IAAMG,IAAUD,IAAI,oB,GAvBjCE,a,kDCCtBC,E,uKAEb,OACI,6BACI,8BACI,yBAAKN,UAAU,aACX,yBAAKA,UAAU,YACX,6BACA,6CAEA,mMAMA,6BACI,yBAAKC,IAAKM,IAAcJ,IAAI,oBAKpC,yBAAKH,UAAU,+BAEX,6BACI,yBAAKC,IAAKO,IAAqBL,IAAI,0BAGvC,6BACA,qDAEA,uKAOJ,yBAAKH,UAAU,YACX,6BACA,0CAEA,uMAMA,6BACI,yBAAKC,IAAKQ,IAAON,IAAI,cAOzC,yBAAKH,UAAU,oBACX,yBAAKA,UAAU,iBACf,8DAEA,4BAAQA,UAAU,2BAAlB,+B,GA5DyBK,a,iBCFpBK,E,uKAEb,OACI,6BACI,gCACI,yBAAKV,UAAU,aACX,yBAAKC,IAAKU,IAAWR,IAAI,SAC7B,yBAAKH,UAAU,oBACX,4BACI,0JAGA,+CACA,mDAGJ,4BACI,wCACA,0CACA,oCAGJ,4BACI,sCACA,oCACA,2CAGJ,wBAAIA,UAAU,gBACV,4BACI,yBAAKA,UAAU,UACf,uBAAGA,UAAU,wBAGjB,4BACI,yBAAKA,UAAU,UACf,uBAAGA,UAAU,qBAGjB,4BACI,yBAAKA,UAAU,UACf,uBAAGA,UAAU,yBAKzB,sF,GA9CgBK,aCarBO,MAVf,WACE,OACE,yBAAKZ,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCYa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.23a1a42e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3cb86730.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-mockups.88090ace.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-grow-together.bb27da81.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-flowing-conversation.6641e825.svg\";","module.exports = __webpack_public_path__ + \"static/media/illustration-your-users.8a5af995.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.d4d1854c.svg\";","import React, {Component} from 'react';\r\nimport headerLogo from './images/logo.svg';\r\nimport Mockups from './images/illustration-mockups.svg';\r\n\r\nexport default class HeaderSection extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"container\">\r\n                    <nav className=\"flex\">\r\n                    <img className=\"logo\" src={ headerLogo } alt=\"logo\" />\r\n                    <button className=\"btn\">\r\n                        Try It Free\r\n                    </button>\r\n                    </nav>\r\n                    <div className=\"flex\">\r\n                        <div> \r\n                            <h1>Build The Community Your Fans Will Love</h1>\r\n                            <p>\r\n                            Huddle re-imagines the way we build communities. You have a voice, but so does your audience. \r\n                            Create connections with your users as you engage in genuine discussion.\r\n                            </p> \r\n                            <button className=\"btn btn-primary\">\r\n                            Get Started For Free\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            <img className=\"header-img\" src={ Mockups } alt=\"mockups\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }    \r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport GrowTogether from './images/illustration-grow-together.svg';\r\nimport FlowingConversation from './images/illustration-flowing-conversation.svg';\r\nimport Users from './images/illustration-your-users.svg';\r\n\r\nexport default class mainContent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <main>\r\n                    <div className=\"container\">\r\n                        <div className=\"box flex\">\r\n                            <div>\r\n                            <h2>Grow Together</h2>\r\n                    \r\n                            <p>\r\n                                Generate meaningful discussions with your audience and build a strong, loyal community. \r\n                                Think of the insightful conversations you miss out on with a feedback form.\r\n                            </p> \r\n                            </div>\r\n                    \r\n                            <div>\r\n                                <img src={GrowTogether} alt=\"grow-together\"/>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    \r\n                        <div className=\"box flex box-reverse-mobile\">\r\n                    \r\n                            <div>\r\n                                <img src={FlowingConversation} alt=\"flowing-conversation\"/>\r\n                            </div>\r\n                    \r\n                            <div>\r\n                            <h2>Flowing Conversations</h2>\r\n                    \r\n                            <p>\r\n                                You wouldn't paginate a conversation in real life, so why do it online? Our threads \r\n                                have just-in-time loading for a more natural flow.\r\n                            </p>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                        <div className=\"box flex\">\r\n                            <div>\r\n                            <h2>Your Users</h2>\r\n                    \r\n                            <p>\r\n                                It takes no time at all to integrate Huddle with your app's authentication solution. \r\n                                This means, once signed in to your app, your users can start chatting immediately.\r\n                            </p>\r\n                            </div>\r\n                    \r\n                            <div>\r\n                                <img src={Users} alt=\"users\"/>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                    </div>\r\n            </main>\r\n            \r\n            <div className=\"container center\">\r\n                <div className=\"box small-box\">\r\n                <h2>Ready To Build Your Community?</h2>\r\n            \r\n                <button className=\"btn btn-primary btn-big\">\r\n                    Get Started For Free\r\n                </button> \r\n                </div>\r\n            </div> \r\n        </div>  \r\n        )\r\n    }    \r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport LogoWhite from './images/logo-white.svg';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer>\r\n                    <div className=\"container\">\r\n                        <img src={LogoWhite} alt=\"logo\" />\r\n                    <div className=\"flex align-start\">\r\n                        <ul>\r\n                            <li>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n                                eiusmod tempor incididunt ut labore et dolore magna aliqua\r\n                            </li>\r\n                            <li>+1-543-123-4567</li>\r\n                            <li>example@huddle.com</li>\r\n                        </ul> \r\n\r\n                        <ul>\r\n                            <li>About Us</li>\r\n                            <li>What We Do</li>\r\n                            <li>FAQ</li>\r\n                        </ul>\r\n\r\n                        <ul>\r\n                            <li>Career</li>\r\n                            <li>Blog</li>\r\n                            <li>Contact Us</li>\r\n                        </ul>\r\n\r\n                        <ul className=\"social-media\">\r\n                            <li>\r\n                                <div className=\"circle\">\r\n                                <i className=\"fab fa-facebook-f\" />\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"circle\">\r\n                                <i className=\"fab fa-twitter\" />\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"circle\">\r\n                                <i className=\"fab fa-instagram\" />\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div> \r\n                    <p>\r\n                        Â© Copyright 2020 Huddle. All rights reserved.\r\n                    </p>\r\n                    </div>  \r\n                </footer>\r\n            </div>  \r\n        )\r\n    }    \r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport HeaderSection from './components/headerSection';\nimport MainContent from './components/mainContent';\nimport Footer from './components/footerSection';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <HeaderSection />\n        <MainContent />\n        <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}